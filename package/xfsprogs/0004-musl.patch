diff -ruN xfsprogs-4.7.0.orig/fsr/xfs_fsr.c xfsprogs-4.7.0/fsr/xfs_fsr.c
--- xfsprogs-4.7.0.orig/fsr/xfs_fsr.c	2016-02-29 00:39:26.000000000 +0100
+++ xfsprogs-4.7.0/fsr/xfs_fsr.c	2016-08-12 09:52:18.196254505 +0200
@@ -36,6 +36,10 @@
 #define _PATH_FSRLAST		"/var/tmp/.fsrlast_xfs"
 #define _PATH_PROC_MOUNTS	"/proc/mounts"
 
+#ifndef _PATH_MOUNTED
+#define _PATH_MOUNTED MOUNTED
+#endif
+
 
 char *progname;
 
diff -ruN xfsprogs-4.7.0.orig/include/linux.h xfsprogs-4.7.0/include/linux.h
--- xfsprogs-4.7.0.orig/include/linux.h	2016-08-04 03:30:01.000000000 +0200
+++ xfsprogs-4.7.0/include/linux.h	2016-08-12 09:52:43.556254165 +0200
@@ -34,6 +34,37 @@
 #include <mntent.h>
 #include <linux/fs.h> /* fsxattr defintion for new kernels */
 
+#include <stdio.h>
+
+#ifndef loff_t
+#define loff_t off_t
+#endif
+#ifndef __uint8_t
+#define __uint8_t uint8_t
+#endif
+#ifndef __uint16_t
+#define __uint16_t uint16_t
+#endif
+#ifndef __uint32_t
+#define __uint32_t uint32_t
+#endif
+#ifndef __uint64_t
+#define __uint64_t uint64_t
+#endif
+
+#ifndef __int8_t
+#define __int8_t int8_t
+#endif
+#ifndef __int16_t
+#define __int16_t int16_t
+#endif
+#ifndef __int32_t
+#define __int32_t int32_t
+#endif
+#ifndef __int64_t
+#define __int64_t int64_t
+#endif
+
 static __inline__ int xfsctl(const char *path, int fd, int cmd, void *p)
 {
 	return ioctl(fd, cmd, p);
diff -ruN xfsprogs-4.7.0.orig/io/readdir.c xfsprogs-4.7.0/io/readdir.c
--- xfsprogs-4.7.0.orig/io/readdir.c	2016-02-29 00:39:26.000000000 +0100
+++ xfsprogs-4.7.0/io/readdir.c	2016-08-12 09:52:18.196254505 +0200
@@ -23,6 +23,9 @@
 
 #include <sys/types.h>
 #include <dirent.h>
+#define _DIRENT_HAVE_D_OFF
+#define _DIRENT_HAVE_D_RECLEN
+#define _DIRENT_HAVE_D_TYPE
 
 static struct cmdinfo readdir_cmd;
 
diff -ruN xfsprogs-4.7.0.orig/libxfs/linux.c xfsprogs-4.7.0/libxfs/linux.c
--- xfsprogs-4.7.0.orig/libxfs/linux.c	2016-07-22 00:20:50.000000000 +0200
+++ xfsprogs-4.7.0/libxfs/linux.c	2016-08-12 09:52:18.196254505 +0200
@@ -16,11 +16,8 @@
  * Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  */
 
-#define ustat __kernel_ustat
 #include <mntent.h>
 #include <sys/stat.h>
-#undef ustat
-#include <sys/ustat.h>
 #include <sys/mount.h>
 #include <sys/ioctl.h>
 #include <sys/sysinfo.h>
@@ -51,9 +48,12 @@
 int
 platform_check_ismounted(char *name, char *block, struct stat64 *s, int verbose)
 {
-	/* Pad ust; pre-2.6.28 linux copies out too much in 32bit compat mode */
-	struct ustat	ust[2];
 	struct stat64	st;
+	FILE		*f;
+	struct stat64	mst;
+	struct mntent	*mnt;
+	char		mounts[MAXPATHLEN];
+	int		ismounted = 0;
 
 	if (!s) {
 		if (stat64(block, &st) < 0)
@@ -63,14 +63,25 @@
 		s = &st;
 	}
 
-	if (ustat(s->st_rdev, ust) >= 0) {
+	strcpy(mounts, (!access(PROC_MOUNTED, R_OK)) ? PROC_MOUNTED : MOUNTED);
+	if ((f = setmntent(mounts, "r")) == NULL)
+		return 0;
+
+	while ((mnt = getmntent(f)) != NULL) {
+		if (stat64(mnt->mnt_dir, &mst) < 0)
+			continue;
+		if (mst.st_dev != s->st_rdev)
+			continue;
+
 		if (verbose)
 			fprintf(stderr,
 				_("%s: %s contains a mounted filesystem\n"),
 				progname, name);
-		return 1;
+		ismounted = 1;
+		break;
 	}
-	return 0;
+	endmntent(f);
+	return ismounted;
 }
 
 int
